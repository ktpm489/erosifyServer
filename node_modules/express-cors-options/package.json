{
  "name": "express-cors-options",
  "version": "0.0.4",
  "description": "Create a catch all for responding to CORS OPTIONS method requests",
  "main": "index.js",
  "dependencies": {
    "config-extend": "*"
  },
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/JameHight/node-express-cors-options.git"
  },
  "keywords": [
    "express",
    "cors",
    "options",
    "cross-origin",
    "cross",
    "origin",
    "resource",
    "sharing",
    "connect"
  ],
  "author": {
    "name": "James Hight"
  },
  "licenses": [
    {
      "type": "Apache 2.0",
      "url": "https://github.com/JamesHight/node-express-cors-options/blob/master/LICENSE"
    }
  ],
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/JameHight/node-express-cors-options/issues"
  },
  "readme": "Express CORS OPTIONS\n====================\n\nCreate a catch all for responding to CORS OPTIONS method requests\n\n----\n\nInstallation\n\n````bash\nnpm install express-cors-options\n````\n\n\nUsage:\n\n````javascript\n// Place after router\napp.use(app.router);\n\n//\nvar options = {\n\torigin: 'http://foo.com', // default: '*'\n\tmethod: 'GET,PUT,POST', // default: 'GET,PUT,POST,DELETE,HEAD,OPTIONS'\n\theaders: 'Content-Type, Content-Length' // default: 'Content-Type, Authorization, Content-Length, X-Requested-With, X-HTTP-Method-Override'\n};\n\napp.use(require('express-cors-options')(options));\n````",
  "homepage": "https://github.com/JameHight/node-express-cors-options",
  "_id": "express-cors-options@0.0.4",
  "_shasum": "8e086c836d235f2c558b4c02235b67b589cbdb96",
  "_from": "express-cors-options@0.0.4",
  "_resolved": "https://registry.npmjs.org/express-cors-options/-/express-cors-options-0.0.4.tgz"
}
